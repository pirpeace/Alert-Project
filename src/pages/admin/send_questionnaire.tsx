import React, { useState, useEffect, useCallback } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import { RootState } from '@/redux/store'

import LayoutPage from '@/components/LayoutPage'

import { Card, Container, Row, Form, Button, Table, Modal } from 'react-bootstrap'
import { getBorrowEquipmentList, updateBorrowEquipmentStatusSend } from '@/lib/service/borrowEquipment'
import { handleAxiosError } from '@/lib/service/helpFunction';
import { openModalAlert } from '@/redux/features/modal'
import moment from 'moment'

const SendQuestionnaire = () => {
    const user = useSelector((state: RootState) => state.user.user);
    const dispatch = useDispatch()

    const [validated, setValidated] = useState(false)
    const [show, setShow] = useState({ isShow: false, title: '', body: '' })
    const [showQuestionnaire, setShowQuestionnaire] = useState({ isShow: false, title: '', body: '' })
    const [borrowEquipmentList, setBorrowEquipmentList] = useState<any[]>([])

    useEffect(() => {
        getBorrowEquipmentListData('', '', '')
    }, [])

    const getBorrowEquipmentListData = useCallback(async (name: string, name_borrow: string, status: string) => {
        try {
            const res = await getBorrowEquipmentList(name, name_borrow, status)
            if(res.data){
                setBorrowEquipmentList(res.data)
            }
        } catch (error) {
            console.log("üöÄ ~ getUsersList ~ error:", error)

        }
    }, [])


    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
        event.preventDefault()
        event.stopPropagation()
        const form = event.currentTarget
        if (form.checkValidity() === false) {
            setValidated(true)
            return
        }
        await getBorrowEquipmentListData(form['name_user'].value, form['name_borrow'].value, '')
    }

    const handleClose = () => {
        setShow({ isShow: false, title: '', body: '' })
        setShowQuestionnaire({ isShow: false, title: '', body: '' })
    }

    const handleSend = useCallback( async (item: any) => {
        try {
            if (!user.userId) {
                return
            }
            const res = await updateBorrowEquipmentStatusSend(2, user.userId, item.borrow_id)
           
                await getBorrowEquipmentListData('', '', '')
            
            dispatch(openModalAlert({ show: true, message: '‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }))
        } catch (error) {
            console.log("üöÄ ~ handleSend ~ error:", error)
            dispatch(openModalAlert({ show: true, message: handleAxiosError(error) }))
        }
    }, [user])
    return (
        <LayoutPage>
            <Container fluid>
                <Row className="py-3">
                    <Card className="card-stats card-dashboard shadow mb-4 mb-xl-0 p-0">
                        <Card.Header>
                            <Card.Title>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Card.Title>
                        </Card.Header>
                        <Card.Body>
                            <Form onSubmit={(e) => handleSubmit(e)} noValidate validated={validated} className="row p-2">
                                <Form.Group className="col">
                                    <Form.Label>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</Form.Label>
                                    <Form.Control type="text" name="name_user" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏" />
                                </Form.Group>
                                <Form.Group className="col">
                                    <Form.Label>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ </Form.Label>
                                    <Form.Control type="text" name="name_borrow" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏" />
                                </Form.Group>
                                
                                <Form.Group className="col d-flex align-items-end">
                                    <Button variant="primary" type="submit">
                                        ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                                    </Button>
                                </Form.Group>
                            </Form>
                        </Card.Body>
                    </Card>
                </Row>
                <Row>
                    <Card className="card-stats card-dashboard shadow mb-4 mb-xl-0 p-0">
                        <Card.Header>
                            <p className="m-0">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</p>
                        </Card.Header>
                        <Card.Body>
                            <Table striped bordered hover>
                                <thead>
                                    <tr>
                                        <th className="px-2">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                                        <th className="px-2">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</th>
                                        <th className="px-2">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</th>
                                        <th className="px-2">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</th>
                                        <th className="px-2">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö</th>
                                        <th className="px-2">‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</th>
                                        <th className="px-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                                        <th className="px-2">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {
                                        borrowEquipmentList.map((item, index) => {
                                            return (
                                                <tr key={index}>
                                                    <td className="px-2">{index + 1}</td>
                                                    <td className="px-2">{item.users_id_ref.users_fname + ' ' + item.users_id_ref.users_sname}</td>
                                                    <td className="px-2">{item.borrow_name}</td>
                                                    <td className="px-2">{item.borrow_send_date ? moment(item.borrow_send_date).format('DD-MM-YYYY') : ''}</td>
                                                    <td className="px-2">{item.borrow_send_return ? moment(item.borrow_send_return).format('DD-MM-YYYY') : ''}</td>
                                                    <td className="px-2">
                                                        <Button variant="link" className="p-0 btn-edit" onClick={() => setShowQuestionnaire({ isShow: true, title: item.name_borrow, body: '' })}>
                                                            <i className="fa-solid fa-file"></i>
                                                        </Button>
                                                    </td>
                                                    <td className="px-2">{item.borrow_send_status === 1 ? '‡∏£‡∏≠‡∏™‡πà‡∏á':( item.borrow_send_status === 2 ? <span className="alert-success">{'‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß'}</span>:'‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')}</td>
                                                    <td className="px-2">
                                                        <Button variant="link" className="p-0 btn-edit" onClick={() => handleSend(item)}>
                                                            <i className="fa-solid fa-share-from-square"></i>
                                                        </Button>
                                                    </td>
                                                </tr>
                                            )
                                        })
                                    }
                                </tbody>
                            </Table>
                        </Card.Body>
                    </Card>
                </Row>

                <Modal show={show.isShow} onHide={() => handleClose()} size="lg">
                    <Modal.Header closeButton>
                        <Modal.Title>{show.title}</Modal.Title>
                    </Modal.Header>
                    <Modal.Body>
                        <Table striped bordered hover>
                            <tbody>
                                <tr>
                                    <td className="px-2">{'‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                                    <td className="px-2">{'‡∏ï‡∏£‡∏¥‡∏ì‡∏†‡∏£ ‡∏û‡∏¥‡∏û‡∏±‡∏í‡∏ô‡∏Å‡∏∏‡∏•'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                                    <td className="px-2">{'‡∏ô‡∏¥‡∏ä‡∏≤‡∏†‡∏£‡∏ì‡πå ‡∏™‡∏±‡∏ô‡∏ï‡∏¥‡∏™‡∏∏‡∏Ç'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠'}</td>
                                    <td className="px-2">{'2024-01-01'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡∏ô‡∏™‡∏∏‡∏î'}</td>
                                    <td className="px-2">{'2024-12-31'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'}</td>
                                    <td className="px-2">{'‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</td>
                                    <td className="px-2">{'‡∏ô‡∏£‡∏¥‡∏® ‡∏ï‡∏£‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'}</td>
                                    <td className="px-2">{'2024-01-02'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'ID ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á'}</td>
                                    <td className="px-2">{'AASO00019238'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô'}</td>
                                    <td className="px-2">{'2024-01-02'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô'}</td>
                                    <td className="px-2">{'‡∏ô‡∏£‡∏¥‡∏® ‡∏ï‡∏£‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå'}</td>
                                </tr>
                            </tbody>
                        </Table>
                        <Form.Group >
                            <Form.Label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</Form.Label>
                            <Form.Select
                                name={'status'}
                                required
                            >
                                <option value={''}>{'‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'}</option>
                                <option value={''}>{'‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                                <option value={''}>{'‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                            </Form.Select>

                        </Form.Group>
                    </Modal.Body>
                    <Modal.Footer>
                        <Button variant="secondary" onClick={() => handleClose()}>
                            ‡∏õ‡∏¥‡∏î
                        </Button>
                        <Button variant="primary" onClick={() => handleClose()}>
                            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                        </Button>
                    </Modal.Footer>
                </Modal>

                <Modal show={showQuestionnaire.isShow} onHide={() => handleClose()} size="lg">
                    <Modal.Header closeButton>
                        <Modal.Title>{'‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</Modal.Title>
                    </Modal.Header>
                    <Modal.Body>
                        <h5>‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</h5>
                        <Table striped bordered hover>
                            <tbody>
                                <tr>
                                    <td className="px-2">{'1.‡πÄ‡∏û‡∏®'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'2.‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'3.‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'4.‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'5.‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'6.‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'7.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏ï‡πà‡∏≠‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'8.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤‡∏ï‡∏±‡∏ß'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'9.‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'10.‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'11.‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'12.‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                            </tbody>
                        </Table>
                        <h5>‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏ß‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</h5>
                        <Table striped bordered hover>
                            <tbody>
                                <tr>
                                    <td className="px-2">{'1.‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πç‡∏≤‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ '}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'2.‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏´‡∏ß‡∏µ‡∏ú‡∏° ‡πÅ‡∏õ‡∏£‡∏á‡∏ü‡∏±‡∏ô ‡πÇ‡∏Å‡∏ô‡∏´‡∏ô‡∏ß‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 24‚Äì48 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'3.‡∏•‡∏∏‡∏Å‡∏ô‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'4.‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'5.‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡πâ‡∏≤‡∏ô '}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'6.‡∏Å‡∏≤‡∏£‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'7.‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏•‡∏á‡∏ö‡∏±‡∏ô‡πÑ‡∏î 1 ‡∏ä‡∏±‡πâ‡∏ô'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'8.‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'9.‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏≠‡∏∏‡∏à‡∏à‡∏≤‡∏£‡∏∞ ‡πÉ‡∏ô 1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                                <tr>
                                    <td className="px-2">{'10.	‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡πâ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞ 1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤'}</td>
                                    <td className="px-2">{'-'}</td>
                                </tr>
                            </tbody>
                        </Table>
                    </Modal.Body>
                    <Modal.Footer>
                        <Button variant="secondary" onClick={() => handleClose()}>
                            ‡∏õ‡∏¥‡∏î
                        </Button>
                    </Modal.Footer>
                </Modal>

            </Container>
        </LayoutPage>
    )
}

export default SendQuestionnaire